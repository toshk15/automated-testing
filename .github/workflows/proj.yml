name: Build, Test and Deploy

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout repo
      uses: actions/checkout@v4
      
  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    # Checkout the code from the repository
    - name: Checkout repo
      uses: actions/checkout@v4

    # Set up Python environment
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # Install dependencies
    - name: Install Dependecies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # run test cases
    - name: Build Project
      run: |     
        mkdir -p test-results coverage-report
        pytest --junitxml=test-results/results.xml --cov=src.app --cov-report=html:coverage-report

    #upload artifacts
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-results
        path: test-results/results.xml     

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html
        path: coverage-report

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:

    # Download the artifact from the build stage
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-html
        path: test-results/

    - name: Simulate Deployment
      run: |
        echo "Deploying to staging..."
        ls test-results/
